// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$icon-fb-name: 'icon-fb'
$icon-fb-x: 38px
$icon-fb-y: 0px
$icon-fb-offset-x: -38px
$icon-fb-offset-y: 0px
$icon-fb-width: 32px
$icon-fb-height: 32px
$icon-fb-total-width: 107px
$icon-fb-total-height: 96px
$icon-fb-image: '../img/sprite/sprite.png'
$icon-fb: (38px, 0px, -38px, 0px, 32px, 32px, 107px, 96px, '../img/sprite/sprite.png', 'icon-fb', )
$icon-mail-name: 'icon-mail'
$icon-mail-x: 0px
$icon-mail-y: 74px
$icon-mail-offset-x: 0px
$icon-mail-offset-y: -74px
$icon-mail-width: 28px
$icon-mail-height: 22px
$icon-mail-total-width: 107px
$icon-mail-total-height: 96px
$icon-mail-image: '../img/sprite/sprite.png'
$icon-mail: (0px, 74px, 0px, -74px, 28px, 22px, 107px, 96px, '../img/sprite/sprite.png', 'icon-mail', )
$icon-phone-2-name: 'icon-phone (2)'
$icon-phone-2-x: 0px
$icon-phone-2-y: 37px
$icon-phone-2-offset-x: 0px
$icon-phone-2-offset-y: -37px
$icon-phone-2-width: 32px
$icon-phone-2-height: 32px
$icon-phone-2-total-width: 107px
$icon-phone-2-total-height: 96px
$icon-phone-2-image: '../img/sprite/sprite.png'
$icon-phone-2-: (0px, 37px, 0px, -37px, 32px, 32px, 107px, 96px, '../img/sprite/sprite.png', 'icon-phone (2)', )
$icon-phone-3-name: 'icon-phone(3)'
$icon-phone-3-x: 37px
$icon-phone-3-y: 37px
$icon-phone-3-offset-x: -37px
$icon-phone-3-offset-y: -37px
$icon-phone-3-width: 32px
$icon-phone-3-height: 32px
$icon-phone-3-total-width: 107px
$icon-phone-3-total-height: 96px
$icon-phone-3-image: '../img/sprite/sprite.png'
$icon-phone-3-: (37px, 37px, -37px, -37px, 32px, 32px, 107px, 96px, '../img/sprite/sprite.png', 'icon-phone(3)', )
$icon-phone-name: 'icon-phone'
$icon-phone-x: 75px
$icon-phone-y: 37px
$icon-phone-offset-x: -75px
$icon-phone-offset-y: -37px
$icon-phone-width: 21px
$icon-phone-height: 32px
$icon-phone-total-width: 107px
$icon-phone-total-height: 96px
$icon-phone-image: '../img/sprite/sprite.png'
$icon-phone: (75px, 37px, -75px, -37px, 21px, 32px, 107px, 96px, '../img/sprite/sprite.png', 'icon-phone', )
$icon-tw-name: 'icon-tw'
$icon-tw-x: 0px
$icon-tw-y: 0px
$icon-tw-offset-x: 0px
$icon-tw-offset-y: 0px
$icon-tw-width: 33px
$icon-tw-height: 32px
$icon-tw-total-width: 107px
$icon-tw-total-height: 96px
$icon-tw-image: '../img/sprite/sprite.png'
$icon-tw: (0px, 0px, 0px, 0px, 33px, 32px, 107px, 96px, '../img/sprite/sprite.png', 'icon-tw', )
$icon-vk-name: 'icon-vk'
$icon-vk-x: 75px
$icon-vk-y: 0px
$icon-vk-offset-x: -75px
$icon-vk-offset-y: 0px
$icon-vk-width: 32px
$icon-vk-height: 32px
$icon-vk-total-width: 107px
$icon-vk-total-height: 96px
$icon-vk-image: '../img/sprite/sprite.png'
$icon-vk: (75px, 0px, -75px, 0px, 32px, 32px, 107px, 96px, '../img/sprite/sprite.png', 'icon-vk', )
$spritesheet-width: 107px
$spritesheet-height: 96px
$spritesheet-image: '../img/sprite/sprite.png'
$spritesheet-sprites: ($icon-fb, $icon-mail, $icon-phone-2-, $icon-phone-3-, $icon-phone, $icon-tw, $icon-vk, )
$spritesheet: (107px, 96px, '../img/sprite/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
